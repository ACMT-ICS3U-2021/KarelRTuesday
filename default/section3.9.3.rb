require_relative "ur_robot"

class UrRobot
  def turn_right()
    turn_left()
    turn_left()
    turn_left()
  end
end

def task()
   world = RobotWorld.instance()
   world.read_world("../worlds/fig3-2.kwld")
   mark = UrRobot.new(2, 2, EAST, 0)
   mark.move()
   mark.pick_beeper()
   mark.move()
   mark.pick_beeper()
   mark.move()
   mark.pick_beeper()
   mark.move()
   mark.pick_beeper()
   mark.move()
   mark.pick_beeper()
   mark.turn_left()
   mark.move()
   mark.turn_left()
   mark.pick_beeper()
   mark.move()
   mark.pick_beeper()
   mark.move()
   mark.pick_beeper()
   mark.move()
   mark.pick_beeper()
   mark.move()
   mark.pick_beeper()
   mark.turn_left()
   mark.turn_left()
   mark.turn_left()
   mark.move()
   mark.turn_left()
   mark.turn_left()
   mark.turn_left()
   mark.pick_beeper()
   mark.move()
   mark.pick_beeper()
   mark.move()
   mark.pick_beeper()
   mark.move()
   mark.pick_beeper()
   mark.move()
   mark.pick_beeper()
   mark.turn_left()
   mark.turn_left()
   mark.turn_left()
   mark.move()
   mark.turn_left()
   mark.pick_beeper()
   mark.move()
   mark.pick_beeper()
   mark.move()
   mark.pick_beeper()
   mark.move()
   mark.pick_beeper()
   mark.move()
   mark.pick_beeper()
   mark.turn_left()
   mark.move()
   mark.turn_left()
   mark.pick_beeper()
   mark.move()
   mark.pick_beeper()
   mark.move()
   mark.pick_beeper()
   mark.move()
   mark.pick_beeper()
   mark.move()
   mark.pick_beeper()
   mark.move()
   mark.turn_off()
end

if __FILE__ == $0
  # window(12, 20).run(lambda{task})
  # or 
  window(10, 50).run{task}
end